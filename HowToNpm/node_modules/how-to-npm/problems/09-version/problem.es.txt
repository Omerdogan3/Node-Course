Cada paquete en npm tiene un n칰mero de versi칩n asociado. Mientras
vas publicando versiones nuevas, estas versiones reciben un
n칰mero de versi칩n nuevo y 칰nico.

Las versiones de npm siguen un est치ndar llamado "SemVer". En ingl칠s
eso es "Semantic Versioning", o sea "versionamiento sem치ntico".
El texto del est치ndar se encuentra en http://semver.org.

La explicaci칩n corta es as칤:

  1.2.3
  ^ ^ ^
  | | `-- versi칩n "patch" (parche). Cambia con cada versi칩n nueva.
  | `---- versi칩n menor. Incrementa con cada rasgo nuevo.
  `------ versi칩n mayor. Incrementa cuando hay cambios de API incompatibles.

npm tiene un comando especial llamado `npm version`, que puede manejar
la versi칩n en package.json por tii, y adem치s acometer el cambio
a git si lo est치s usando. Para leer m치s sobre el tema,
haz `npm help version`

O, si no conf칤as mucho de semejantes programas, puedes abrir
tu package.json y editar el n칰mero en el campo llamado "version".

춰El registro de npm no te dejar치 publicar una versi칩n que haya
sido publicada antes! 춰Nunca! As칤 que acost칰mbrate a la idea de
que incrementar la versi칩n cada vez que vayas a publicar, aunque
los cambios sean m칤nimos.

No te preocupes. Resultan que ex칤sten muchos n칰meros, as칤 que probablemente
no se te van a acabar.游땔

Incrementa tu n칰mero de versi칩n ahora, y entonces haz `$ADVENTURE_COMMAND verify`.
